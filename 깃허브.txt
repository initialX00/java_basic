설치 시 use visual studio code as git's default editor
git bash 사용
붙여넣기 및 카피는 shift + ins
위아래 방향키로 이전 명령어 불러오기 가능
로그인 및 --global user는 전역설정이라서 자리 바꿀때만 사용
인텔리제이에 .idea/ 추가 idea는 인텔리제이에서 자동으로 생성되기에 다운받을 필요가 없다.


github에 빈 repository 생성

cd c:/korea-gpt/git_study  //경로설정

git init  //깃 저장소 생성. 해당 경로에 깃폴더가 생성되어 업로드할 정보 저장

git config --global user.name initialX00  //유저네임 등록

git config --global user.name   //유저네임 확인

git config --global user.email rkdlswlsdn@naver.com  //이메일 등록

git config --global user.email  //이메일 확인




git add A.txt  //해당 파일 저장 대기

git add .  //폴더 내 모든 파일 저장 대기

git status   //폴더 내 파일들 저장대기 여부확인, 수정 여부확인

git commit -m "__"   //코멘트 부여해서 깃에 저장

git commit -m " //"쌍따옴표 안 닫고 엔터키 입력시 여러줄 입력 가능.




git remote add origin 주소 //깃과 허브 연결 (깃허브 리포지토리에 해당주소 나와있음) 

git push -u origin main  //깃허브에 main 생성 후 업로드. 최초 업로드 및 로그인.
    로그인 설정)) 자격증명관리 - windows자격증명 - 일반자격증명 - 다른사람거 로그아웃하기

git push  //깃에 저장된 자료를 깃허브에 업로드

저장소 삭제는 깃허브 - 세팅 - 제일아래 저장소 삭제




git clone 주소  // 해당주소의 깃허브 폴더 다운로드

git clone 주소 폴더명  //해당폴더명으로 해당주소의 깃허브 폴더 다운로드

git fetch  // 깃허브에 갱신된 정보 받기

git pull  // 깃허브에 갱신된 정보로 수정하기

충돌방지
  fetch pull을 하지 않고 개개인의 폴더로 깃허브에 업로드할 경우 각자의 버전이 달라서 오류가 난다.
  패치를 받고서 최신버전을 통일시켜준 뒤 업로드를 해야한다.
  merge 오류가 뜬다. 해당 파일에 선택해야될 코드가 제시된다. HEAD가 본래 저장위치의 값이다.
  사람이 직접 수정해줘야한다. 비주얼스튜디오에서 가시성있게 보여준다. 수정 후 재업로드한다.




.gitignore 
  - 업로드하지 않을 파일 정하는 방법
    .gitignore 을 생성한다(파일확장명이 없어야한다) 
    해당 파일에 업로드하지 않을 파일명을 기입한다.
  - 깃이그노어를 후 생성할 경우 해당 파일이 깃이그노어를 상관 안하고 업로드한다.
    따라서 해당 파일을 빼고 업로드하여 제거한다.
  - 인텔리제이의 이그노어에 다음을 추가. idea폴더는 자동 생성되기때문에 충돌방지를 위해 필요없다.
	### IntelliJ IDEA ###
	.idea/
