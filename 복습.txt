cpu <- ram <- hdd
ram:cpu와 직접 데이터를 주고받기에 주요저장매체
hdd:보조저장매체

선언 - 메모리에 공간을 생성
초기화 - 새로운 값을 부여
상수 - 변하지 않는값
메모리에는 상수들이 이미 존재한다.

int age = 10;
데이터타입 int를 age라는 이름으로 메모리에 할당한 뒤, 그 자리에 10의 상수값의 주소를 부여.

A a = new A;
클래스데이터타입 A를 a라는 이름으로 메모리에 할당, 객체 new A 또한 메모리에 별도로 할당한 뒤 A에 해당 주소를 입력.
참조타입의 데이터는 상수값이 없으므로 주소값이 나온다.

10을 출력하기 위해 변수선언을 해서 출력할 필요가 없듯이 
객체를 생성하지 않고도 new A도 바로 사용이 가능하다.
System.out.println(10) / System.out.pritnln(age)
System.out.println(a) / System.out.pritnln(new A)

매개변수를 선언할 때 데이터타입 변수명으로 선언하듯이
'클래스타입 변수명'으로도 선언이 가능하다.
호출 시 '메서드명(new 생성자명)'일 경우,
'클래스타입 변수명 = new 생성자명'처럼 
public void 메서드명(클래스타입 변수명)인 해당 매개변수에 new 생성자명이 입력이 된다.





다형성
네이버 로그인화면 -> 로그인하고 나면 주소가 바뀌지 않았음에도, 로그인화면이 프로필로 바뀜

제네릭타입<>
<T> <R> <C> 제네릭의 추상화

List 인터페이스 / ArrayList, LinkedList 구현화된클래스
List<Integer> a = new ArrayList<>(); 




double -> int 다운캐스팅
int -> double 업캐스팅
int가 double보다 복잡한 타입이다. double에서 함수를 통해 범위를 좁힌 데이터타입이다.





extends : 메모리확장
abstract나 interface를 쓰지 않더라도 확장개념이라면 추상화된걸로 취급한다.
자식클래스에서 오버라이딩하기에 부모클래스를 사용하지 않기때문이다.
업캐스팅 다운캐스팅 등 사용에 문제없다.

interface 기능분리목적
abstract 공통된개념확장목적










컴파일(번역, 입력해놓은 코드) - 정적메모리, 오류가 있으면 실행자체가 불가.

런타임(실행, 코드의 메모리 할당) - 동적할당, 객체 생성을 통해 주소를 할당하여 생성자에 대입하는 등의 작업을 함.

static 정적 선언
static 선언함으로써 정적메모리에 추가되어, 런타임작업에 제외된다.
클래스와 함께 경로처럼 저장되기에(클래스의 다른 코드는 제외) 클래스명으로 직접호출이 가능하다.
static은 런타임에 제외되기때문에 static메서드에 변수가 있을경우 해당 변수도 static 선언을 해야한다.






싱글톤
데이터베이스를 관리하는 툴은 혼란을 방지하기위해 하나만 있어야한다.
private로 접근불가한 생성자를, 같은 클래스내의 static 메서드를 통해 호출하여 사용한다.
메서드에서 객체를 호출하기 위해 필드는 클래스타입 선언한다.
생성자가 여러개 생성되지 않도록 if문과 null을 활용한다.
외부에서 필드에 null을 선언하지 못하도록 필드는 private static 선언을 한다.
메서드명은 필드가 클래스타입이기에 필드명을 이어 받고 private 접근을 위해 Getter된 이름을 쓴다.
static 메서드는 공용이기에 생성자를 어디서 수정하든 모두 일괄적용된다.











